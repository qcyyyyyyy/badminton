<script>
  import { ref, reactive } from 'vue';
  import { ElMessage,ElMessageBox } from 'element-plus';
  import axios from 'axios';

  export default {
    name: 'menu',
    setup() {
      const menus = ref([]);
      const form = ref({
        id: null,
        name: '',
        price: null,
        category: ''
      });
      const dialogVisible = ref(false);
      const isEditing = ref(false);
  
      const showMessage = (message) => {
        ElMessage({
          message: message,
          type: 'info'
        });
      };

      const loadmenus = async () => {
        const response = await axios.get('/api/menus');
        menus.value = response.data.data;
      };
  
      loadmenus();

      const addMenu = async (menu) => {
        let params = menu;
        const response = await axios.post(`/api/addMenu`,params);
        menus.value = response.data.data;
        dialogVisible.value = false
        showMessage('添加成功')
      };

      const deleteMenu = (menu) => {
        ElMessageBox.confirm(
            '你确认要删除该菜单的信息吗?',
            '温馨提示',
            {
                confirmButtonText: '确认',
                cancelButtonText: '取消',
                type: 'warning',
            }
        )
        .then(async () => {
            const response = await axios.delete('/api/deleteMenu',{data:menu});
            menus.value = response.data.data;
            ElMessage({
                type: 'success',
                message: '删除成功',
            })
        })
        .catch(() => {
            ElMessage({
                type: 'info',
                message: '取消删除',
            })
        })
      }

      const editMenu = async (menu) => {
        const response = await axios.post(`/api/editMenu`,menu);
        menus.value = response.data.data;
        dialogVisible.value = false
        showMessage('编辑成功')
      };

      const clearData = async() => {
        form.value = {
          id: null,
          name: '',
          price: null,
          category: ''
        }
      }

      return{
        menus,form,dialogVisible,isEditing,showMessage,addMenu,deleteMenu,editMenu,clearData
      };
    }
  }

</script>
<template>
    <el-card class="menu-container">
        <template #header>
            <div class="header">
                <div class="extra">
                    <el-button :icon="Plus" type="primary" @click="dialogVisible = true; isEditing = false;clearData()">新增菜单</el-button>
                    <el-button :icon="EditPen" type="success" @click="dialogVisible = true; isEditing = true;">编辑菜单</el-button>
                    <el-button :icon="Delete" type="danger" @click="showMessage('删除成功')">删除菜单</el-button>
                    <el-button :icon="Download" type="warning" @click="showMessage('导出成功')">导出数据</el-button>
                </div>
            </div>
        </template>
      <el-table :data="menus" style="width: 100%">
        <el-table-column prop="id" label="ID" width="80"></el-table-column>
        <el-table-column prop="name" label="菜单" width="180"></el-table-column>
        
        <el-table-column label="操作">
          <template #default="scope">
            <el-button size="mini" @click="dialogVisible = true; isEditing = true; form=scope.row">编辑</el-button>
            <el-button size="mini" type="danger" @click="deleteMenu(scope.row)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <el-dialog :title="isEditing ? '编辑菜单' : '新增菜单'" v-model="dialogVisible">
        <el-form :model="form">
          <el-form-item label="菜单">
            <el-input v-model="form.name"></el-input>
          </el-form-item>
      
        </el-form>
        <span slot="footer" class="dialog-footer">
          <el-button @click="dialogVisible = false;showMessage('取消操作')">取 消</el-button>
          <el-button type="primary" @click="isEditing ? editMenu(form) : addMenu(form)">确 定</el-button>
        </span>
      </el-dialog>
    </el-card>
</template>
  
